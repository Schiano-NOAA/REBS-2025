filter(fleet != 8)
# no age data for AK slope
#sensi_mod$dat$agecomp <- sensi_mod$dat$agecomp |>
#  filter(fleet != 8)
## DON"T NEED TO REMOVE SIZE SELEX
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'02_no_AK_slope'
),
overwrite = TRUE
)
## 3) remove NW slope survey
sensi_mod <- base_model
#sensi_mod$start$init_values_src<-0
sensi_mod$dat$CPUE <- sensi_mod$dat$CPUE |>
filter(index != 9)
sensi_mod$ctl$Q_options <- sensi_mod$ctl$Q_options[
-grep('NW_SLOPE', rownames(sensi_mod$ctl$Q_options)),
]
sensi_mod$ctl$Q_parms <- sensi_mod$ctl$Q_parms[
-grep('NW_SLOPE', rownames(sensi_mod$ctl$Q_parms)),
]
# Need to remove length data, age data, and selectivities.
# If no catch or index, you can't have length or age data
sensi_mod$dat$lencomp <- sensi_mod$dat$lencomp |>
filter(fleet != 9)
# no age data for NW slope
#sensi_mod$dat$agecomp <- sensi_mod$dat$agecomp |>
#  filter(fleet != 8)
## DON"T NEED TO REMOVE SIZE SELEX
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'03_no_NW_slope'
),
overwrite = TRUE
)
## 4) remove WCGBTS survey
sensi_mod <- base_model
#sensi_mod$start$init_values_src<-0
sensi_mod$dat$CPUE <- sensi_mod$dat$CPUE |>
filter(index != 10)
sensi_mod$ctl$Q_options <- sensi_mod$ctl$Q_options[
-grep('WCGBTS', rownames(sensi_mod$ctl$Q_options)),
]
sensi_mod$ctl$Q_parms <- sensi_mod$ctl$Q_parms[
-grep('WCGBTS', rownames(sensi_mod$ctl$Q_parms)),
]
# Need to remove length data, age data, and selectivities.
# If no catch or index, you can't have length or age data
sensi_mod$dat$lencomp <- sensi_mod$dat$lencomp |>
filter(fleet != 10)
sensi_mod$dat$agecomp <- sensi_mod$dat$agecomp |>
filter(fleet != 10)
## DON"T NEED TO REMOVE SIZE SELEX
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'04_no_WCGBTS'
),
overwrite = TRUE
)
## 5) remove all indices
sensi_mod <- base_model
#sensi_mod$start$init_values_src<-0
sensi_mod$dat$CPUE$year <- -1 * sensi_mod$dat$CPUE$year
sensi_mod$ctl$Q_options <- sensi_mod$ctl$Q_parms <- NULL
sensi_mod$ctl$Q_parms_tv <- NULL
# Need to remove length data, age data, and selectivities.
# If no catch or index, you can't have length or age data
indices_no_catches <- c(7, 8, 9, 10)
indices_und <- paste0(indices_no_catches, "_")
indices_chr <- paste0("(", indices_no_catches, ")")
sensi_mod$dat$lencomp <- sensi_mod$dat$lencomp |>
filter(!fleet %in% indices_no_catches)
sensi_mod$dat$agecomp <- sensi_mod$dat$agecomp |>
filter(!fleet %in% indices_no_catches)
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'05_no_indices'
),
overwrite = TRUE
)
# Remove length comps -----------------------------------------------------
# need to add runs that fix selex
## 6) remove bottom trawl and BT discard lengths
# We don't need to remove the selex params if we are removing length comps from
# data that has catch
sensi_mod <- base_model
sensi_mod$dat$lencomp <- sensi_mod$dat$lencomp |>
filter(!fleet %in% c(1,2))
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'06_no_BT_lengths'
),
overwrite = TRUE
)
## 6a) remove bottom trawl only lengths
sensi_mod <- base_model
sensi_mod$dat$lencomp <- sensi_mod$dat$lencomp |>
filter(fleet != 1)
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'06a_no_BTonly_lengths'
),
overwrite = TRUE
)
## 6b) remove bottom trawl discard lengths
sensi_mod <- base_model
sensi_mod$dat$lencomp <- sensi_mod$dat$lencomp |>
filter(fleet != 2)
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'06b_no_BTdis_lengths'
),
overwrite = TRUE
)
## 7) remove non-trawl and non-trawl discard lengths
sensi_mod <- base_model
sensi_mod$dat$lencomp <- sensi_mod$dat$lencomp |>
filter(!fleet %in% c(3,4))
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'07_no_NT_lengths'
),
overwrite = TRUE
)
## 7a) remove non-trawl lengths
sensi_mod <- base_model
sensi_mod$dat$lencomp <- sensi_mod$dat$lencomp |>
filter(fleet != 3)
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'07a_no_NTonly_lengths'
),
overwrite = TRUE
)
## 7b) remove non-trawl discard lengths
sensi_mod <- base_model
sensi_mod$dat$lencomp <- sensi_mod$dat$lencomp |>
filter(fleet != 4)
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'07b_no_NTdis_lengths'
),
overwrite = TRUE
)
## 8) remove MWT lengths
sensi_mod <- base_model
sensi_mod$dat$lencomp <- sensi_mod$dat$lencomp |>
filter(fleet != 5)
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'08_no_MWT_lengths'
),
overwrite = TRUE
)
## 9) remove at-sea hake lengths
sensi_mod <- base_model
sensi_mod$dat$lencomp <- sensi_mod$dat$lencomp |>
filter(fleet != 6)
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'09_no_ASHOP_lengths'
),
overwrite = TRUE
)
## 10) remove Triennial lengths
sensi_mod <- base_model
sensi_mod$dat$lencomp <- sensi_mod$dat$lencomp |>
filter(fleet != 7)
# Fix params by *-1 instead of removing them for indices - says Ian
# note from Jason on REBS - will estimate selex without lengths first, then fix
# sensi_mod$ctl$size_selex_parms[
#   grepl('TRIENNIAL', rownames(sensi_mod$ctl$size_selex_parms)),
# ]$PHASE <-
#   abs(
#     sensi_mod$ctl$size_selex_parms[
#       grepl('TRIENNIAL', rownames(sensi_mod$ctl$size_selex_parms)),
#     ]$PHASE
#   ) *
#   -1
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'10_no_Triennial_lengths'
),
overwrite = TRUE
)
## 11) remove AK slope lengths
sensi_mod <- base_model
sensi_mod$dat$lencomp <- sensi_mod$dat$lencomp |>
filter(fleet != 8)
# sensi_mod$ctl$size_selex_parms[
#   grepl('AK_SLOPE', rownames(sensi_mod$ctl$size_selex_parms)),
# ]$PHASE <-
#   abs(
#     sensi_mod$ctl$size_selex_parms[
#       grepl('AK_SLOPE', rownames(sensi_mod$ctl$size_selex_parms)),
#     ]$PHASE
#   ) *
#   -1
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'11_no_AKslope_lengths'
),
overwrite = TRUE
)
## 12) remove NW slope lengths
sensi_mod <- base_model
sensi_mod$dat$lencomp <- sensi_mod$dat$lencomp |>
filter(fleet != 9)
# sensi_mod$ctl$size_selex_parms[
#   grepl('NW_SLOPE', rownames(sensi_mod$ctl$size_selex_parms)),
# ]$PHASE <-
#   abs(
#     sensi_mod$ctl$size_selex_parms[
#       grepl('NW_SLOPE', rownames(sensi_mod$ctl$size_selex_parms)),
#     ]$PHASE
#   ) *
#   -1
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'12_no_NWslope_lengths'
),
overwrite = TRUE
)
## 13) remove WCGBTS lengths
sensi_mod <- base_model
sensi_mod$dat$lencomp <- sensi_mod$dat$lencomp |>
filter(fleet != 10)
# sensi_mod$ctl$size_selex_parms[
#   grepl('WCGBTS', rownames(sensi_mod$ctl$size_selex_parms)),
# ]$PHASE <-
#   abs(
#     sensi_mod$ctl$size_selex_parms[
#       grepl('WCGBTS', rownames(sensi_mod$ctl$size_selex_parms)),
#     ]$PHASE
#   ) *
#   -1
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'13_no_WCGBTS_lengths'
),
overwrite = TRUE
)
## 14) remove all fishery length comps
sensi_mod <- base_model
sensi_mod$ctl$lambdas <- sensi_mod$ctl$lambdas |>
bind_rows(data.frame(
like_comp = 4,
fleet = 1:6,
phase = 1,
value = 0,
sizefreq_method = 0
))
sensi_mod$ctl$N_lambdas <- nrow(sensi_mod$ctl$lambdas)
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'14_no_fishery_lengths'
),
overwrite = TRUE
)
## 15) remove all survey length comps
sensi_mod <- base_model
sensi_mod$ctl$lambdas <- sensi_mod$ctl$lambdas |>
bind_rows(data.frame(
like_comp = 4,
fleet = 7:10,
phase = 1,
value = 0,
sizefreq_method = 0
))
sensi_mod$ctl$N_lambdas <- nrow(sensi_mod$ctl$lambdas)
# Turn size selex phase to -1 for indices that don't have catch or aren't mirroring catch selectivity
indices_list <- paste0(
"TRIENNIAL",
"AK_SLOPE",
"NW_SLOPE",
"WCGBTS",
collapse = "|"
)
sensi_mod$ctl$size_selex_parms[
grepl(indices_list, rownames(sensi_mod$ctl$size_selex_parms)),
]$PHASE <-
abs(
sensi_mod$ctl$size_selex_parms[
grepl(indices_list, rownames(sensi_mod$ctl$size_selex_parms)),
]$PHASE
) *
-1
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'15_no_survey_lengths'
),
overwrite = TRUE
)
## 16) remove all length comps
sensi_mod <- base_model
sensi_mod$ctl$lambdas <- sensi_mod$ctl$lambdas |>
bind_rows(data.frame(
like_comp = 4,
fleet = 1:10,
phase = 1,
value = 0,
sizefreq_method = 0
))
sensi_mod$ctl$N_lambdas <- nrow(sensi_mod$ctl$lambdas)
# # Turn size selex phase to -1 for indices that don't have catch or aren't mirroring catch selectivity
indices_list <- paste0(
"TRIENNIAL",
"AK_SLOPE",
"NW_SLOPE",
"WCGBTS",
collapse = "|"
)
sensi_mod$ctl$size_selex_parms[
grepl(indices_list, rownames(sensi_mod$ctl$size_selex_parms)),
]$PHASE <-
abs(
sensi_mod$ctl$size_selex_parms[
grepl(indices_list, rownames(sensi_mod$ctl$size_selex_parms)),
]$PHASE
) *
-1
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'16_no_lengths'
),
overwrite = TRUE
)
# Remove age comps --------------------------------------------------------
## 17) remove bottom trawl ages
sensi_mod <- base_model
sensi_mod$dat$agecomp <- sensi_mod$dat$agecomp |>
filter(fleet != 1)
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'17_no_BT_ages'
),
overwrite = TRUE
)
## 18) remove non-trawl ages
sensi_mod <- base_model
sensi_mod$dat$agecomp <- sensi_mod$dat$agecomp |>
filter(fleet != 3)
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'18_no_NT_ages'
),
overwrite = TRUE
)
## 19) remove MWT trawl ages
sensi_mod <- base_model
sensi_mod$dat$agecomp <- sensi_mod$dat$agecomp |>
filter(fleet != 5)
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'19_no_MWT_ages'
),
overwrite = TRUE
)
## 20) remove ASHOP ages
sensi_mod <- base_model
sensi_mod$dat$agecomp <- sensi_mod$dat$agecomp |>
filter(fleet != 6)
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'20_no_ASHOP_ages'
),
overwrite = TRUE
)
## 21) remove WCGBTS ages
sensi_mod <- base_model
sensi_mod$dat$agecomp <- sensi_mod$dat$agecomp |>
filter(fleet != 10)
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'21_no_WCGBTS_ages'
),
overwrite = TRUE
)
## 22) remove all fishery ages
sensi_mod <- base_model
sensi_mod$ctl$lambdas <- sensi_mod$ctl$lambdas |>
bind_rows(data.frame(
like_comp = 5,
fleet = c(1,3,5,6),
phase = 1,
value = 0,
sizefreq_method = 0
))
sensi_mod$ctl$N_lambdas <- nrow(sensi_mod$ctl$lambdas)
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'22_no_fishery_ages'
),
overwrite = TRUE
)
## 23) remove all ages
sensi_mod <- base_model
sensi_mod$ctl$lambdas <- sensi_mod$ctl$lambdas |>
bind_rows(data.frame(
like_comp = 5,
fleet = c(1,3,5,6,10),
phase = 1,
value = 0,
sizefreq_method = 0
))
sensi_mod$ctl$N_lambdas <- nrow(sensi_mod$ctl$lambdas)
SS_write(
sensi_mod,
file.path(
model_directory,
'data_sensitivities',
'23_no_ages'
),
overwrite = TRUE
)
sensi_dirs <- c(
list.files(
file.path(
model_directory,
'data_sensitivities'
),
full.names = TRUE
))
future::plan(future::multisession(
workers = parallelly::availableCores(omit = 1)
))
results <- future_map(
sensi_dirs,
~ r4ss::run(
dir = .x,
exe = exe_loc,
extras = '-nohess',
skipfinished = FALSE
)
)
source("C:/Github/REBS-2025/Rcode/sensitivities_data.R")
